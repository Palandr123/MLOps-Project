name: Champion model validation  

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'scripts/**'
      - 'services/airflow/dags/**'
      - 'tests/**'
      - 'configs/**'
      - '.github/**'

permissions:
  contents: read

env:
  message: "Validating champion model!"

jobs:

  validate-model:

    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: .

    steps:

      - name: Checking out our code
        uses: actions/checkout@v4
        with:
          repository: 'Palandr123/MLOps-Project'
        
        # Install a version of Python
      - name: setup python
        uses: actions/setup-python@v5
        
        # Install this specific version 3.11.0 of Python
        with:
          python-version: '3.11.0'

      - name: Install poetry
        uses: abatilo/actions-poetry@v2
          
        # Install Python packages  
      - name: install python packages
        run: |
          poetry install --no-interaction


      - name: Store Gdrive credentials
        run: echo '${{ secrets.GDRIVE_CREDENTIALS_DATA}}' > gdrive-credentials.json

      - name: Configure DVC remote with service account
        run: |
          poetry run dvc remote modify drive gdrive_use_service_account true
          poetry run dvc remote modify drive --local gdrive_service_account_json_file_path gdrive-credentials.json

      - name: Pull DVC data
        run: |
          poetry run dvc pull
        
      
      - name: Export variables
        run: | 
          echo $PWD
          export ZENML_CONFIG_PATH=$PWD/services/zenml
          export PROJECTPATH=$PWD
          export PROJECT_HOME=$PWD
          export AIRFLOW_HOME=$PWD/services/airflow
          export PYTHONPATH=$PWD/src

      - name: Run ZenML server  
        run: poetry run zenml down && poetry run zenml up

      - name: Run MLFlow server
        run: |
          poetry run mlflow server -p 5000 &
          sleep 5
        
      # Run model validation   
      - name: Test champion with Giscard
        run: |
          #source $(poetry env info --path)/bin/activate 
          #which python3.11
          #PYTHONPATH=$PWD/src python3.11 src/validate.py
          poetry run python src/validate.py